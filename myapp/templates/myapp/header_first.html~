
{%load staticfiles %}
<!DOCTYPE html>
<html>

<head>
<link rel="stylesheet" href="{% static 'myapp/css/map.css' %}" / >
<script type="text/javascript" src="{% static 'myapp/js/jquery-1.7.1.min.js' %}"></script>
<!--<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDeE9zkeT1v-qGN-aFNvZj5amyXN5G0svo&libraries=places&callback=initAutocomplete"
         async defer></script>
background: rgb(151,193,182); /* Old browsers */
background: -moz-linear-gradient(top, rgba(151,193,182,1) 0%, rgba(18,140,124,1) 55%, rgba(18,140,124,1) 100%); /* FF3.6-15 */
background: -webkit-linear-gradient(top, rgba(151,193,182,1) 0%,rgba(18,140,124,1) 55%,rgba(18,140,124,1) 100%); /* Chrome10-25,Safari5.1-6 */
background: linear-gradient(to bottom, rgba(151,193,182,1) 0%,rgba(18,140,124,1) 55%,rgba(18,140,124,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#97c1b6', endColorstr='#128c7c',GradientType=0 );
<script type="text/javascript" src="{% static 'myapp/js/map.js' %}"></script>-->


<script type="text/javascript" src="{% static 'myapp/js/graph.js' %}"></script>

<script src="{% static 'myapp/all/jquery/jquery.min.js'%}"></script>

<!-- Bootstrap Core JavaScript -->
<script src="{% static 'myapp/all/bootstrap/js/bootstrap.min.js'%}"></script>

<!-- Metis Menu Plugin JavaScript -->
<script src="{% static 'myapp/all/metisMenu/metisMenu.min.js'%}"></script>

<!-- DataTables JavaScript -->
<script src="{% static 'myapp/all/datatables/js/jquery.dataTables.min.js'%}"></script>
<script src="{% static 'myapp/all/datatables-plugins/dataTables.bootstrap.min.js'%}"></script>
<script src="{% static 'myapp/all/datatables-responsive/dataTables.responsive.js'%}"></script>

<!-- Custom Theme JavaScript -->
<script src="{% static 'myapp/js/sb-admin-2.js'%}"></script>
<script type="text/javascript" src="{% static 'myapp/js/graph.js' %}"></script>





<link href="{% static 'myapp/all/bootstrap/css/bootstrap.min.css'%}" rel="stylesheet">
<!-- MetisMenu CSS -->
<link href="{% static 'myapp/all/metisMenu/metisMenu.min.css'%}" rel="stylesheet">

<!-- DataTables CSS -->
<link href="{% static 'myapp/all/datatables-plugins/dataTables.bootstrap.css'%}" rel="stylesheet">

<!-- DataTables Responsive CSS -->
<link href="{% static 'myapp/all/datatables-responsive/dataTables.responsive.css'%}" rel="stylesheet">

<!-- Custom CSS -->
<link href="{% static 'myapp/css/sb-admin-2.css'%}" rel="stylesheet">

<link href="{% static 'myapp/css/ul_styles.css'%}" rel="stylesheet">

<!-- Custom Fonts -->
<link href="{% static 'myapp/all/font-awesome/css/font-awesome.min.css'%}" rel="stylesheet" type="text/css">

<style>
.sensor_inform
{
display:none;
width: 308px;
height:139px;
margin-left: 246px;
margin-top:20px;
border:1px solid grey;
border-radius:5px;
box-shadow:2px 2px 10px orange;
padding: 5px;
background: #a07594;
color:white;
}
.sensor_inform span
{
float:left;
display:block;
padding-bottom: 5px;
clear:both;
}
</style>

</head>

<body style="background: url('{% static 'myapp/all/grad2.jpg'%}') no-repeat center center fixed; 
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;">
  <div id="wrapper">
    <!-- Sidebar -->
    <nav class="navbar navbar-default navbar-static-top" role="navigation" style="margin-bottom: 0;1position :fixed; width: 100%;background-color: #d2d2d2; border-color: #242424; ">
	<center><div class="heading">Air Pollution Monitoring System</div></center>
        <!-- /.navbar-header -->

        <!-- /.navbar-static-side -->
    </nav>


<div class="navbar-default sidebar" role="navigation; background-color: #f0ad4e;">
            <div   id="cssmenu" class="sidebar-nav navbar-collapse">
                <ul class="nav sensors" id="side-menu">

                    <li class="active"><a href="/iot">Sensors</a></li>
		    <li><a href="/previous"> Previous Data</a></li>

                    <li><a href="/analytics">Analytics</a></li>
                    <li><a href="/livemap">Live Data</a></li>
                </ul>
            </div>
            <!-- /.sidebar-collapse -->
</div>




    <div id="page-wrapper1" style="1min-height: 5000%; 1height: 5000%;">
        <center>
	<div class="row1">
            <!-- <div class="col-lg-12"> -->
            <!-- <div id="map"></div> -->
            <div class="sensors-view row home-view" >


    <script>
      function initAutocomplete() {
  var i=2;
  var k=2;
  /*var myCenter = new google.maps.LatLng(13.549349,79.9995459);

  
  var mapOptions = {center: myCenter, zoom: 5, mapTypeId:google.maps.MapTypeId.HYBRID};
  var mapCanvas = document.getElementById("map");
  
  var map = new google.maps.Map(mapCanvas,mapOptions);*/
var map = new google.maps.Map(document.getElementById('map'), {
   center: {lat:13.549361,lng: 79.999493},
    zoom: 17,
  mapTypeId: google.maps.MapTypeId.HYBRID
  });


  var sensor1 = new google.maps.LatLng(13.549349,79.9995459);
  var sensor2 = new google.maps.LatLng(13.549432, 79.999345);
  /*var sensor2 = new google.maps.LatLng(13.530389, 79.997847);
  var sensor3 = new google.maps.LatLng(14.38147628, 79.99145508);
  var sensor4 = new google.maps.LatLng(12.916517, 79.132499);
  var sensor5 = new google.maps.LatLng(13.560349, 78.503606);
   var sensor6 = new google.maps.LatLng(14.467354, 78.824134);
   var sensor7 = new google.maps.LatLng(14.64736838, 77.60742188);
   var sensor8 = new google.maps.LatLng(12.90819811, 77.59643555);
var sensor9 = new google.maps.LatLng(15.828126, 78.037279);
var sensor10 = new google.maps.LatLng(13.549485, 79.999394);
var sensor11 = new google.maps.LatLng(13.554658, 80.027375);
var sensor12 = new google.maps.LatLng(13.521676, 79.999180);
*/
  

{%for Sensor in sensors %}
var content1 = '<div id="iw-container">' +
                    '<div class="iw-title">IFMR Building ,Sricity</div>' +
                    '<div class="iw-content">' +
                      '<div class="iw-subTitle"></div>' +
                      '<img src="{% static 'myapp/all/sricity.jpg'%}" alt="Porcelain Factory of Vista Alegre" height="115" width="83">' +
                      '<p><b>Last active on </b>  {{Sensor.Sensor_date}}</p>' +
			'<p><b>Last reading </b>  {{Sensor.Sensor_value}}                       </p>' +
                      '<p><b>Contacts</b></p>' +
                      '<br>Phone. +9441927108<br>e-mail: its.group001@gmail.com</p><p style="margin-right:-4px;"><i>***To know more info click on the marker***</i></p>'+
                    '</div>' +
                  '</div>';
{%endfor%}

{%for Sensor in sensors12 %}
//alert({{Sensor.Sensor_date}});
var content2 = '<div id="iw-container">' +
                    '<div class="iw-title" style="background:#a07594 !important;">IFMR Building ,Sricity</div>' +
                    '<div class="iw-content">' +
                      '<div class="iw-subTitle"></div>' +
                      '<img src="{% static 'myapp/all/sricity.jpg'%}" alt="Porcelain Factory of Vista Alegre" height="115" width="83">' +
                      '<p><b>Last active on </b>  {{Sensor.Sensor_date}}</p>' +
			'<p><b>Last reading </b>  {{Sensor.Sensor_value}}                       </p>' +
                      '<p><b>Contacts</b></p>' +
                      '<br>Phone. +9441927108<br>e-mail: its.group001@gmail.com</p><p style="margin-right:-4px;"><i>***To know more info click on the marker***</i></p>'+
                    '</div>' +
                  '</div>';
{%endfor%}
  // A new Info Window is created and set content
  var infowindow1 = new google.maps.InfoWindow({
    content: content1, maxWidth: 360
  });
  var infowindow2 = new google.maps.InfoWindow({
    content: content2, maxWidth: 360
  });



 var marker1 = new google.maps.Marker({position:sensor1, map: map, id:"marker1"} );
var marker2 = new google.maps.Marker({position:sensor2, map: map, id:"marker2"} );

marker1.setMap(map);
marker2.setMap(map);



marker1.addListener('mouseover', function() {
    infowindow1.open(map, this);
});

//hide the infowindow when user mouses-out
marker1.addListener('mouseout', function() {
   infowindow1.close();

});

google.maps.event.addListener(marker1, 'click', function() {
	if(i%2==0){
			  $('.sensor_inform').hide();
		         $('.sensor_info').show();
			  infowindow1.open(map, this);
	i++;
	}
	else 
	{
			$('.sensor_info').hide();
	i--;
	}
});


marker2.addListener('mouseover', function() {
    infowindow2.open(map, this);
});

//hide the infowindow when user mouses-out
marker2.addListener('mouseout', function() {
   infowindow2.close();

});

google.maps.event.addListener(marker2, 'click', function() {
	if(k%2==0){
			$('.sensor_info').hide();
		         $('.sensor_inform').show();
			  infowindow2.open(map, this);
	k++;
	}
	else 
	{
			$('.sensor_inform').hide();
	k--;
	}
});



//$( "div.gm-style-iw " ).parent().css( "background", "pink" );



 // Create the search box and link it to the UI element.
  var input = document.getElementById('pac-input');
  var searchBox = new google.maps.places.SearchBox(input);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);




  // Bias the SearchBox results towards current map's viewport.
  map.addListener('bounds_changed', function() {
    searchBox.setBounds(map.getBounds());
  });


  var markers = [];
  // Listen for the event fired when the user selects a prediction and retrieve
  // more details for that place.
  searchBox.addListener('places_changed', function() {
    var places = searchBox.getPlaces();

    if (places.length == 0) {
      return;
    }

    // Clear out the old markers.
    markers.forEach(function(marker) {
      marker.setMap(null);
    });
    markers = [];

    // For each place, get the icon, name and location.
    var bounds = new google.maps.LatLngBounds();
    places.forEach(function(place) {
      if (!place.geometry) {
        console.log("Returned place contains no geometry");
        return;
      }
      var icon = {
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(25, 25)
      };

      // Create a marker for each place.
      markers.push(new google.maps.Marker({
        map: map,
        icon: icon,
        title: place.name,
        position: place.geometry.location
      }));

      if (place.geometry.viewport) {
        // Only geocodes have viewport.
        bounds.union(place.geometry.viewport);
      } else {
        bounds.extend(place.geometry.location);
      }
    });
    map.fitBounds(bounds);
  });

//google.maps.event.addDomListener(window, 'load', initAutocomplete);

}

//$( ".gm-style-iw " ).parent().css( "left", "143px !important" );
//alert($( "div.gm-style-iw" ).parent().css("position"));
//$( ".gm-style-iw " ).parent().css( "width"," 175px !important" );


    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDeE9zkeT1v-qGN-aFNvZj5amyXN5G0svo&libraries=places&callback=initAutocomplete">
    </script>
              <input id="pac-input" class="controls" type="text" placeholder="Search Box" />
                <div id="map" style="position:relative; overflow: hidden;"></div>
	        
            <!-- Replace the value of the key parameter with your own API key. -->
            </div>





            {%block mapid%}
            {%endblock%}
            <!-- /.col-lg-12 -->
        </div>
	</center>


        <!-- /.row -->

        <!-- /.row -->

        <!-- /.row -->
    </div>
<center>
<div class="sensor_info">
			<span><b>Sensor Location:</b> IFMR building, Sricity</span>
			<span><b>Installation Date:  </b>{%for Sensor in sensors %}{{Sensor.Sensor_date}}{%endfor%}</span>	
			<span><b>Maximum Reading:   </b>{{max1.Sensor_value__max}}</span>
			<span><b>Minimum Reading:   </b>{{min1.Sensor_value__min}}</span>
			<span><b>Average Reading:   </b>{{avg1}}</span>
</div>
<div class="sensor_inform">
			<span><b>Sensor Location:</b> IFMR building, Sricity</span>
			<span><b>Installation Date:  </b>{%for Sensor in sensors2 %}{{Sensor.Sensor_date}}{%endfor%}</span>	
			<span><b>Maximum Reading:   </b>{{max12.Sensor_value__max}}</span>
			<span><b>Minimum Reading:   </b>{{min12.Sensor_value__min}}</span>
			<span><b>Average Reading:   </b>{{avg12}}</span>
</div>
</center>
